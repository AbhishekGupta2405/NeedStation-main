# Application name
spring.application.name=authbackend

# MySQL DataSource Properties
spring.datasource.url=jdbc:mysql://localhost:3306/NeedStation
spring.datasource.username=root
spring.datasource.password=Mickie@007
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# CORS Configuration (Spring Boot handles this with your CorsFilter in SecurityConfig)
# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

#Google Maps API Key
google.maps.api.key=AIzaSyBwNUkrw0WOChZUk6PVTMB-4F5eV0frh1o
google.translate.api-key=AIzaSyDaEJ4vo3cRDG90bsEVw2C98QNQlP5Ai6o

#Cloudinary API Key
cloudinary.cloud-name=dchmvabfy
cloudinary.api-key=232897247466261
cloudinary.api-secret=i9TQkkCYHZN2FhGMjh8awDr76EI

#GetOTP API Configuration
#otp.api.key=ZHAnB2zxQ7ywRghIt4WXEuirjLlJp69v
#otp.api.token=149reo5dzb2pwv6s7cilq8xfjtmh0nu3
#otp.api.endpoint=https://otp.dev/api/verify/

server.port=8080
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.com.example.authbackend.service.OtpService=DEBUG
logging.level.org.springframework.security=DEBUG
# Using default LOWER_CAMEL_CASE naming strategy to match frontend
# spring.jackson.property-naming-strategy=SNAKE_CASE
